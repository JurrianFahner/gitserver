{"name":"Gitserver","tagline":"A git repository running in a docker container","body":"### Welcome\r\nSometimes you wonder could life not a bit easier...\r\n> Life is really simple, but we insist on making it complicated. _Confucius_\r\nWell to create a git server you need to have two ingredients:\r\n1. Git\r\n2. Ssh server\r\n\r\nThese two pieces of software are not always so straightforward to setup. However I believe the software developers have done everything they could do to make it simple as possible. \r\n\r\n### Docker\r\nDocker is a nice way to put pieces of software in containers. One of the big advantages of docker is that you can use only what you need to run a particular piece of software. \r\nDocker images tends to grow and sizes of more than 500MB are not uncommon. To reduce the size you can choose from many different linux distributions. I picked [alpine linux](http://www.alpinelinux.org/) to do the job¸as docker image is it is emere 2MB in size. For reference ubuntu starts at 50MB.\r\n\r\n### Security \r\nSecurity plays an important role in this project. You can find details of hardening the ssh server on this page: https://stribika.github.io/2015/01/04/secure-secure-shell.html\r\n\r\n### Lets get started\r\nFirst you want a running gitserver. \r\n\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here [using GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/), select a template crafted by a designer, and publish. After your page is generated, you can check out the new `gh-pages` branch locally. If you’re using GitHub Desktop, simply sync your repository and you’ll see the new branch.\r\n\r\n### Designer Templates\r\nWe’ve crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n","google":"UA-72167148-1","note":"Don't delete this file! It's used internally to help with page regeneration."}